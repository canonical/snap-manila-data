[tox]
skipsdist = True
envlist = lint,py3,mypy
sitepackages = False
skip_missing_interpreters = False
minversion = 3.18.0

[vars]
src_path = {toxinidir}/manila_data/
tst_path = {toxinidir}/tests/
pyproject_toml = {toxinidir}/pyproject.toml
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
basepython = python3
setenv =
    PYTHONPATH = {toxinidir}:{[vars]src_path}
passenv =
    PYTHONPATH
    HOME
install_command =
    pip install {opts} {packages}
commands = stestr run --slowest {posargs}
allowlist_externals =
    git
deps =
    .
    stestr

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black --config {[vars]pyproject_toml} {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell {[vars]all_path}
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 --exclude --config {toxinidir}/pyproject.toml {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --config {[vars]pyproject_toml} --check --diff {[vars]all_path}

[testenv:mypy]
deps =
    {[testenv]deps}
    mypy
commands =
    mypy {[vars]all_path}

[testenv:py3]
basepython = python3
deps =
    {[testenv]deps}

[testenv:cover]
basepython = python3
deps =
    {[testenv:py3]deps}
    cover
setenv =
    {[testenv]setenv}
    PYTHON=coverage run
commands =
    coverage erase
    stestr run --slowest {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report

[coverage:run]
branch = True
concurrency = multiprocessing
parallel = True
source =
    .
omit =
    .tox/*
    tests/*
    manila_data/templates/*

[flake8]
ignore=E226,W504
